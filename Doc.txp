====================================================
Documentation de TeX'

Pierre-Etienne Meunier et al.

LAMA UMR 5127, Université de Savoie
====================================================
{{
open Diag
module Env_abstract = struct
  let parameters a b c line =
    let par=parameters a b c line in
      { par with
          measure=120.;
          left_margin=par.left_margin +. (par.measure-.120.)/.2. }
  let textWidth = normal 120.
  let do_begin_abstract () = ()
  let do_end_abstract () = ()
end

let fig2 env=
  let contents_a = draw_boxes (boxify { env with size = 4. } [T "salut ça va bien?"]) in
  let contents_b= List.map (translate 20. 50.) (draw_boxes (boxify { env with size = 4. } [T "J"])) in
  let contents_c=List.map (translate 50. 30.) (draw_boxes (boxify { env with size = 4. } 
    (alternative Bold [T "Ailllaillaille!"])))
  in
  let state = [] in
  let params = { NodeShape.default with strokingColor=Some (RGB { red=0.;green=1.;blue=0. }); lineWidth=0.1 } 
  in  
  let a, state = Node.make_draw state 
    ~contents:contents_a 
    ~shape:(NodeShape.circle ~parameters:params ~inner_sep:5.)
    () in
  let b, state = Node.make_draw state ~contents:contents_b
    ~shape:(NodeShape.rectangle ~parameters:{ params with lineWidth=3. ; lineJoin=Round_join} ~inner_sep:4.)
    () in
  let c, state = Node.make_draw state 
    ~contents:contents_c 
    ~shape:(NodeShape.flower ~parameters:params ~amplitude:3.)
    () in
  let ab = Node.edge
    ~parameters:{ default with strokingColor=Some (RGB { red=0.;green=1.;blue=0. }); lineWidth=0.1 }
    ~controls:(Node.bend_left a b)
    a b
  in
  let ab' = Node.edge
    ~parameters:{ default with strokingColor=Some (RGB { red=0.7;green=0.7;blue=0.7 }); lineWidth=0.3 }
    ~controls:(Node.bend_right ~angle:60.0 a b)
    a b
  in
  let ac = Node.edge
    ~parameters:{ default with strokingColor=Some (RGB { red=0.7;green=0.7;blue=0.7 }); lineWidth=0.1 }
    ~controls:(Node.bend_right ~angle:10.0 a c)
    a c
  in
  let cb = Node.edge
    ~parameters:{ default with strokingColor=Some (RGB { red=0.;green=0.7;blue=0.7 }); lineWidth=0.2 }
    ~controls:(Node.bend_left ~angle:20.0 c b)
    c b
  in
  let tip_ab = ArrowTip.simple ab () in 
    drawing ~offset:(-10.) (state @ [tip_ab;ab';ab;ac;cb])

let fig2 () =  [B (fun env->Drawing (fig2 env)) ]

let large text = [size 10. text]
}}

\Begin{abstract}
TeX' est un logiciel permettant de produire des documents de haute qualité. Il utilise un langage plus moderne que TeX pour la programmation : OCaml, une technologie plus évoluée pour l'analyse grammaticale : dypgen et on vise une qualité typographique supérieure.

\Italic
Pour l'instant le logiciel est en cours de développement et on est loin d'avoir atteint tous les objectifs !
\End{abstract}

=> Introduction

\large{TeX' c'est bien mieux que TeX. Un point c'est tout. \fig2 
  \italic{eeeet \alternative{{Bold}}{ouais !}} }



=<

=> Quick start

=> Mon premier Document

Pour faire un titre on utilise
 =>

=<
=<


=> Test Verbatim

Voici un programme écrit dans ce merveilleux language qu'est \alternative{{Caps}}{OCaml} :
''' OCaml
let f x = x
let g x = f (f x)
'''

=<

=> Test des polices

(*
Otf/lmmono10-italic.otf         Otf/lmmonoltcond10-oblique.otf      Otf/lmmonoslant10-regular.otf  Otf/lmromandemi10-regular.otf
Otf/lmmono10-regular.otf        Otf/lmmonoltcond10-regular.otf      Otf/lmroman10-bolditalic.otf   Otf/lmromandunh10-oblique.otf
Otf/lmmonocaps10-oblique.otf    Otf/lmmonoprop10-oblique.otf        Otf/lmroman10-bold.otf         Otf/lmromandunh10-regular.otf
Otf/lmmonocaps10-regular.otf    Otf/lmmonoprop10-regular.otf        Otf/lmroman10-italic.otf       Otf/lmromanslant10-bold.otf
Otf/lmmonolt10-boldoblique.otf  Otf/lmmonoproplt10-boldoblique.otf  Otf/lmroman10-regular.otf      Otf/lmromanslant10-regular.otf
Otf/lmmonolt10-bold.otf         Otf/lmmonoproplt10-bold.otf         Otf/lmromancaps10-oblique.otf
Otf/lmmonolt10-oblique.otf      Otf/lmmonoproplt10-oblique.otf      Otf/lmromancaps10-regular.otf
Otf/lmmonolt10-regular.otf      Otf/lmmonoproplt10-regular.otf      Otf/lmromandemi10-oblique.otf
*)

=> Latin Modern Roman

\family{{lmroman}}{\alternative{{Regular}}{Test latin modern roman regular et \italic{Test italic}}}

\family{{lmroman}}{\alternative{{Bold}}{Test latin modern roman bold et \italic{Test italic}}}

\family{{lmroman}}{\alternative{{Caps}}{Test latin modern roman caps et \italic{Test italic}}}

\family{{lmroman}}{\alternative{{Demi}}{Test latin modern roman demi et \italic{Test italic}}}

=<

=> Latin Modern Mono

\family{{lmmono}}{\alternative{{Regular}}{Test latin modern mono regular et \italic{Test italic}}}

\family{{lmmono}}{\alternative{{Bold}}{Test latin modern mono bold et \italic{Test italic}}}

\family{{lmmono}}{\alternative{{Caps}}{Test latin modern mono caps et \italic{Test italic}}}

\family{{lmmono}}{\alternative{{Demi}}{Test latin modern mono demi et \italic{Test italic}}}


=<

=< 

(* Alegreya raises : Opentype.Table_not_found
=> Alegreya
"test une chaine dans un commentaire *) }"
\family{{alegreya}}{\alternative{{Regular}}{Test Alegreya regular et \italic{Test italic}}}

\family{{alegreya}}{\alternative{{Bold}}{Test Alegreya bold et \italic{Test italic}}}

\family{{alegreya}}{\alternative{{Caps}}{Test Alegreya caps et \italic{Test italic}}}

\family{{alegreya}}{\alternative{{Demi}}{Test Alegreya demi et \italic{Test italic}}}
=<
*)

=> Math

=> Math en display

$$ t^^j__X_i^n $$

$$ x_i + 2 cos(x) <= a y_i^n - sin(t) $$


$$ B = t^^P * A * P = P^(-1) A P  $$
 
=<

=> Math en paragraph

Un beau paragraphe avec des maths : $t^^j__X_i^n$, $t^^j__x_i^n$, $123^-12.5$.

=<
=<