\No_Grammar
======================================================================
Symboles de Patoline
======================================================================

\Caml(
module DefaultGrammar = struct
  let asana_font=Lazy.lazy_from_fun (fun ()->Typography.Fonts.loadFont (Typography.Util.findFont "Asana-Math/Asana-Math.otf"))
  let asana name code = Maths.symbol ~name (Lazy.force asana_font) [code]
  
  let euler_font=Lazy.lazy_from_fun (fun ()->Typography.Fonts.loadFont (Typography.Util.findFont "Euler/euler.otf"))
  let euler name code = Maths.symbol ~name (Lazy.force euler_font) [code]

  let ams_font=Lazy.lazy_from_fun (fun ()->Typography.Fonts.loadFont (Typography.Util.findFont "AMS/ams.otf"))
  let ams name code = Maths.symbol ~name (Lazy.force ams_font) [code]
end
include DefaultGrammar
)

\Verbose_Changes

== Delimiters ==

\Add_left{ ( }{ ( }
\Add_right{ ) }{ ) }
\Add_left{ [ }{ [ }
\Add_right{ ] }{ ] }
\Add_left{ \langle < 〈}{ ⟨ }
\Add_right{ \rangle > 〉}{ ⟩ }
\Add_left{ | }{ | }
\Add_right{ | }{ | }
\Add_left{\lceil ⌈}{⌈}
\Add_right{\rceil ⌉}{⌉}
\Add_left{\lfloor ⌊}{⌊}
\Add_right{\rfloor ⌋}{⌋}

== Relation symbols ==

\Add_relation{\eq =}{=}
\Add_relation{\neq ≠ /=}{≠}
\Add_relation{\st |}{|}
\Add_relation{:}{:}
\Add_relation{\in ∈}{∈}
\Add_relation{\notin ∉}{∉}
\Add_relation{\ni ∋}{∋}
\Add_relation{\notni ∌}{∌}
\Add_relation{\subseteq ⊆}{⊆}
\Add_relation{\supseteq ⊇}{⊇}
\Add_relation{\nosubseteq ⊈}{⊈}
\Add_relation{\nosupseteq ⊉}{⊉}
\Add_relation{\subset ⊂}{⊂}
\Add_relation{\supset ⊃}{⊃}
\Add_relation{\notsubset ⊄}{⊄}
\Add_relation{\notsupset ⊅}{⊅}
\Add_relation{\subsetneq ⊊}{⊊}
\Add_relation{\supsetneq ⊋}{⊋}

\Add_relation{\leq <= ≤}{≤}
\Add_relation{\geq >= ≥}{≥}
\Add_relation{\lt <}{<}
\Add_relation{\gt >}{>}
\Add_relation{… ..}{…}

== Addition like symbols ==

\Add_addition_like{+}{+}
\Add_addition_like{\oplus ⊕}{⊕}
\Add_addition_like{\ominus ⊖}{⊖}
\Add_addition_like{-}{-}
\Add_addition_like{\pm}{±}
\Add_addition_like{\mp}{∓}
\Add_addition_like{\union ⋃}{⋃}
\Add_addition_like{\inter ⋂}{⋂}
\Add_addition_like{\mod}( fun env st->(Maths.glyphs "mod" (Maths.change_fonts env env.font) st) )
\Add_addition_like{\vee ∨}{∨}
\Add_addition_like{\setminus ∖}{∖}

== Product like symbols ==

\Add_product_like{\dot .}{.}
\Add_product_like{\times ×}{×}
\Add_product_like{\over}{over} (* Donne une barre de fraction *)
\Add_product_like{/}{/}
\Add_product_like{\divide ÷}{÷}
\Add_product_like{\otimes ⊗}{⊗}
\Add_product_like{\bullet ∙}{∙}
\Add_product_like{\circ ∘}{∘}
\Add_product_like{\wedge ∧}{∧}

== Connector symbols ==

\Add_connector{\land && ∧}{∧}
\Add_connector{\restriction ↾}(DefaultGrammar.euler "restriction" 248)
\Add_connector{\lor || ∨}{∨}
\Add_negation{\neg ¬}{¬}

== Arrow symbols ==

\Add_arrow{=> \Imply \Rightarrow ⇒}{⇒}
\Add_arrow{-> \imply \rightarrow →}{→}
\Add_arrow{\ImpliedBy \Leftarrow ⇐}{⇐}
\Add_arrow{<- \impliedBy \leftarrow ←}{←}
\Add_arrow{<=> \Equiv \Leftrightarrow ⇔}{⇔}
\Add_arrow{<-> \equiv \leftrightarrow ↔}{↔}
\Add_arrow{|-> \mapsto ↦}{↦}
\Add_arrow{<-| \mapsfrom ↤}{↤}
(*\Add_arrow{\epi ->> ↠}{↠}*)
(*\Add_arrow{\mono >-> ↣}{↣}*)
\Add_arrow{\inj ↪}{↪}
\Add_arrow{\jni ↩}{↩}
\Add_arrow{\ulharpoon ↼}{↼}
\Add_arrow{\urharpoon ⇀}{⇀}
\Add_arrow{\dlharpoon ↽}{↽}
\Add_arrow{\drharpoon ⇁}{⇁}

== Punctuation symbols ==

\Add_punctuation{,}{,}
\Add_punctuation{;}{;}

== Prefix symbols ==

\Add_prefix{+}{+}
\Add_prefix{-}{-}
\Add_prefix{\forall ∀}{∀}
\Add_prefix{\exists ∃}{∃}
\Add_prefix{\vdash ⊢ |-}{⊢}

== Postfix symbols ==

\Add_postfix{!}{!}
\Add_postfix{*}{*}
\Add_postfix{'}{'}

== Lowercase Greek letters ==

\Add_symbol{\alpha α}{α}
\Add_symbol{\beta β}{β}
\Add_symbol{\gamma γ}{γ}
\Add_symbol{\delta δ}{δ}
\Add_symbol{\epsilon ϵ}{ϵ}
\Add_symbol{\varepsilon ε}{ε}
\Add_symbol{\zeta ζ}{ζ}
\Add_symbol{\eta η}{η}
\Add_symbol{\theta θ}{θ}
\Add_symbol{\iota ι}{ι}
\Add_symbol{\kappa κ}{κ}
\Add_symbol{\lambda λ}{λ}
\Add_symbol{\mu μ}{μ}
\Add_symbol{\nu ν}{ν}
\Add_symbol{\xi ξ}{ξ}
\Add_symbol{\omicron ο}{ο}
\Add_symbol{\pi π}{π}
\Add_symbol{\rho ρ}{ρ}
\Add_symbol{\sigma σ}{σ}
(*\Add_symbol{\varsigma ς}{ς}*)
\Add_symbol{\tau τ}{τ}
\Add_symbol{\upsilon υ}{υ}
\Add_symbol{\phi φ}{φ}
\Add_symbol{\varphi ϕ}{ϕ}
\Add_symbol{\chi χ}{χ}
\Add_symbol{\psi ψ}{ψ}
\Add_symbol{\omega ω}{ω}

== Uppercase Greek letters ==

\Add_symbol{\Alpha Α}{Α}
\Add_symbol{\Beta Β}{Β}
\Add_symbol{\Gamma Γ}{Γ}
\Add_symbol{\Delta Δ}{Δ}
\Add_symbol{\Epsilon Ε}{Ε}
\Add_symbol{\Zeta Ζ}{Ζ}
\Add_symbol{\Eta Η}{Η}
\Add_symbol{\Theta Θ}{Θ}
\Add_symbol{\Iota Ι}{Ι}
\Add_symbol{\Kappa Κ}{Κ}
\Add_symbol{\Lambda Λ}{Λ}
\Add_symbol{\Mu Μ}{Μ}
\Add_symbol{\Nu Ν}{Ν}
\Add_symbol{\Xi Ξ}{Ξ}
\Add_symbol{\Omicron Ο}{Ο}
\Add_symbol{\Pi Π}{Π}
\Add_symbol{\Rho Ρ}{Ρ}
\Add_symbol{\Sigma Σ}{Σ}
\Add_symbol{\Tau Τ}{Τ}
\Add_symbol{\Upsilon Υ}{Υ}
\Add_symbol{\Phi Φ}{Φ}
\Add_symbol{\Chi Χ}{Χ}
\Add_symbol{\Psi Ψ}{Ψ}
\Add_symbol{\Omega Ω}{Ω}

(*
\Add_symbol{\}{}
*)
\Add_symbol{\infty ∞}{∞}
\Add_symbol{\top ⊤}{⊤}
\Add_symbol{\bottom ⊥}{⊥}
\Add_symbol{\emptyset ∅}{∅}

== Black bold letters ==

\Add_symbol{\bbA}(DefaultGrammar.ams "bbN" 66)
\Add_symbol{\bbB}(DefaultGrammar.ams "bbB" 67)
\Add_symbol{\bbC}(DefaultGrammar.ams "bbC" 68)
\Add_symbol{\bbD}(DefaultGrammar.ams "bbD" 69)
\Add_symbol{\bbE}(DefaultGrammar.ams "bbE" 70)
\Add_symbol{\bbF}(DefaultGrammar.ams "bbF" 71)
\Add_symbol{\bbG}(DefaultGrammar.ams "bbG" 72)
\Add_symbol{\bbH ℍ}(DefaultGrammar.ams "bbH" 73)
\Add_symbol{\bbI}(DefaultGrammar.ams "bbI" 74)
\Add_symbol{\bbJ}(DefaultGrammar.ams "bbJ" 75)
\Add_symbol{\bbK}(DefaultGrammar.ams "bbK" 76)
\Add_symbol{\bbL}(DefaultGrammar.ams "bbJ" 77)
\Add_symbol{\bbM}(DefaultGrammar.ams "bbM" 78)
\Add_symbol{\bbN ℕ}(DefaultGrammar.ams "bbN" 79)
\Add_symbol{\bbO}(DefaultGrammar.ams "bbO" 80)
\Add_symbol{\bbP ℙ}(DefaultGrammar.ams "bbP" 81)
\Add_symbol{\bbQ ℚ}(DefaultGrammar.ams "bbQ" 82)
\Add_symbol{\bbR ℝ}(DefaultGrammar.ams "bbR" 83)
\Add_symbol{\bbS}(DefaultGrammar.ams "bbS" 84)
\Add_symbol{\bbT}(DefaultGrammar.ams "bbT" 85)
\Add_symbol{\bbU}(DefaultGrammar.ams "bbU" 86)
\Add_symbol{\bbV}(DefaultGrammar.ams "bbV" 86)
\Add_symbol{\bbW}(DefaultGrammar.ams "bbW" 88)
\Add_symbol{\bbX}(DefaultGrammar.ams "bbX" 89)
\Add_symbol{\bbY}(DefaultGrammar.ams "bbY" 90)
\Add_symbol{\bbZ ℤ}(DefaultGrammar.ams "bbZ" 91)

== Other symbols ==

\Add_limits_operator{∑ \sum}{∑}
\Add_limits_operator{∏ \prod}{∏}
\Add_limits_operator{∐ \coprod}{∐}
\Add_limits_operator{∫ \int}{∫}

\Save_Grammar
