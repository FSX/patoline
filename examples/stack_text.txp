\Caml(
let stack l =
  let contents env =
    let l = List.rev (List.map (Document.draw env) l) in
    let trs i =
      let yoff = env.normalLead *. float_of_int i in
      List.map (RawContent.translate 0.0 yoff)
    in
    List.concat (List.mapi trs l)
  in
  let contents env =
    let dr env =
      let raw = contents env in
      let (x0,y0,x1,y1) = RawContent.bounding_box raw in
      let w = x1 -. x0 in
      let open Box in
      { drawing_min_width     = w
      ; drawing_nominal_width = w
      ; drawing_max_width     = w
      ; drawing_width_fixed   = true
      ; drawing_adjust_before = false
      ; drawing_y0            = y0
      ; drawing_y1            = y1
      ; drawing_badness       = (fun _ -> 0.0)
      ; drawing_break_badness = infinity
      ; drawing_states        = []
      ; drawing_contents      = (fun _ -> raw) }
    in
    [bB (fun env -> [Drawing (dr env)])]
  in
  [C contents]
)

Ut velit mauris, egestas sed, gravida nec, ornare ut, mi.

Hello \stack([<<you,>>; <<what>>; <<is>>]) up?

Aliquam convallis sollicitudin purus. Praesent aliquam, enim at fermentum
mollis, ligula massa adipiscing nisl, ac euismod nibh nisl eu lectus.
